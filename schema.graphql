type TokenWhiteListed @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  token: String!

  isWhitelisted: Boolean!

  minBidIncrement: BigInt!
}

type NftWhiteListed @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  token: String!

  isWhitelisted: Boolean!
}

type MaxNFTCountChanged @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  newMaxNFTCount: BigInt!
}

type ZoomBurnFeeChanged @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  newZoomBurnFee: BigInt!
}

type AuctionMaxTimeChanged @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  newMaxAuctionTime: BigInt!
}

type ItemListed @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  itemNumber: BigInt!

  auctionEnd: BigInt!

  seller: String!

  tokenIds: [String]

  saleToken: String!

  nftToken: String!

  minPrice: BigInt!

  zoomBurned: BigInt!
}

type AuctionCards @entity {
  id: ID!

  itemNumber: BigInt!

  name: String!

  cardOrigin: String!

  rarity: String!

  isNotZoombies: Boolean!

  tokenId: BigInt!

  image: String

  description: String

  typeId: String

  cardSet: String

  zombieType: String

  editionCurrent: BigInt

  editionTotal: BigInt

  cardLevel: BigInt

  originalCost: BigInt

  earnCZXP: BigInt

  sacrificeCZXP: BigInt

  unlockCZXP: BigInt

  releaseTime: BigInt
}

type Bid @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  itemNumber: BigInt!

  bidder: String!

  tokenIds: [String]
}

type Settled @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  itemNumber: BigInt!

  nftToken: String!

  saleToken: String!

  bidAmount: BigInt!

  winner: String!

  seller: String!

  royaltyReceiver: String!

  royaltyAmount: BigInt!

  tokenIds: [String]
}
